swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Swagger Customer"
host: "localhost:5000"
basePath: "/api/v1/"
schemes:
- "https"
- "http"
paths:
  /customer/addCustomer:
    post:
      tags:
      - "Customer"
      summary: "Add a new Customer"
      description: "This can only be done by the any user."
      operationId: "createUser"
      consumes:
        - application/json
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/Customer"
      responses:
        "201":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Customer"
        "400":
          description: "Invalid username supplied"
        "404":
          description: "User not found"
        "500":
          description: "Internal server error"
  /customer/updateCustomer:
    put:
      tags:
      - "Customer"
      summary: "U[date an existing Customer"
      description: "This can only be done by the any user."
      operationId: "updateUser"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/Customer"
      responses:
        "201":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Customer"
        "400":
          description: "Invalid username supplied"
        "404":
          description: "User not found"
        "500":
          description: "Internal server error"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Customer:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "User"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"